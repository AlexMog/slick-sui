#summary Simple lessons for SUI beginners.

_Sui_ is a GUI toolkit that should be familiar to users of other popular toolkits, such as Swing/AWT. These lessons assume the reader has prior knowledge of the Slick API and a general understanding of GUI toolkits.

= Introduction =

All widgets derive from a base `Component` class. A panel, or `Container`, is a widget that can hold child components. Most SUI components extend `Container`.

The top-level container, `Display`, is used to render, update, and gather input for the GUI tree. For most of our tests we will be using a single `Display` instance, but in your final games you may choose to use multiple GUI trees throughout different game states.

Below we have a simple block of code that can be re-used for all simple SUI tests and lessons. It creates an empty display then updates and renders it using Slick's BasicGame class.
{{{
import org.newdawn.slick.*;
import org.newdawn.slick.gui.*;
import org.newdawn.slick.geom.*;
import org.newdawn.slick.fills.*;
import mdes.slick.sui.*;
import mdes.slick.sui.event.*;

public class Lesson1 extends BasicGame {
    
    public static void main(String[] args) throws Exception {
        AppGameContainer app = new AppGameContainer(new Lesson1());
        app.setDisplayMode(800,600,false);
        app.start();
    }
    
    /** The top-level Sui display. */
    private Display display;
    
    public Lesson1() {
        super("Lesson1");
    }
    
    public void init(GameContainer container) throws SlickException {
        //we create a Sui display from our Slick container
        display = new Display(container);
    }
    
    public void update(GameContainer container, int delta) throws SlickException {
        //update the display and its components
        display.update(container, delta);
        
        if (container.getInput().isKeyPressed(Input.KEY_ESCAPE))
            container.exit();
    }
    
    public void render(GameContainer container, Graphics g) throws SlickException {
        //render the display and its components
        display.render(container, g);
    }
}
}}}


= Lesson 1 =
This lesson explains containers, buttons, labels and layouts.